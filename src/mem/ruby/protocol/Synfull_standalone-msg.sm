enumeration(CoherenceRequestType, desc="...") {
    READ,       desc="Read";
    WRITE,      desc="WRITE";
    PUTC,       desc="PUTC";
    PUTD,       desc="PUTD";
    INV,        desc="INValidate";
}

enumeration(CoherenceResponseType, desc="...") {
    ACK,        desc="Generic invalidate Ack";
    WB_ACK,     desc="Writeback Ack";
    DATA,       desc="Data block";
    UNBLOCK,    desc="Unblock";
}

structure(RequestMsg, desc="...", interface="Message") {
    Addr addr,                      desc="Physical address for this request";
    CoherenceRequestType Type,      desc="Type of request (GetS, GetX, PutX, etc)";
    MachineID Requestor,            desc="What component request";
    NetDest Destination,            desc="Node to whom the data is sent";
    DataBlock DataBlk,              desc="Data for the cache line";
    MessageSizeType MessageSize,    desc="size category of the message";

    bool functionalRead(Packet *pkt) {
      error("Garnet_standalone does not support functional accesses!");
    }

    bool functionalWrite(Packet *pkt) {
      error("Garnet_standalone does not support functional accesses!");
    }


}

structure(ResponseMsg, desc="...", interface="Message") {
    Addr addr,                      desc="Physical address for this response";
    CoherenceResponseType Type,     desc="Type of response (Ack, Data, etc)";
    MachineID Requestor,            desc="What component sent the data";
    NetDest Destination,            desc="Node to whom the data is sent";
    DataBlock DataBlk,              desc="Data for the cache line";
    MessageSizeType MessageSize,    desc="size category of the message";

    bool functionalRead(Packet *pkt) {
      error("Garnet_standalone does not support functional accesses!");
    }

    bool functionalWrite(Packet *pkt) {
      error("Garnet_standalone does not support functional accesses!");
    }
}
